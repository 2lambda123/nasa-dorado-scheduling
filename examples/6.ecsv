# %ECSV 0.9
# ---
# datatype:
# - {name: time, datatype: string, description: Start time of observation}
# - {name: exptime, unit: min, datatype: float64, description: Exposure time}
# - {name: location.x, unit: km, datatype: float64, description: Location of the spacecraft}
# - {name: location.y, unit: km, datatype: float64, description: Location of the spacecraft}
# - {name: location.z, unit: km, datatype: float64, description: Location of the spacecraft}
# - {name: center.ra, unit: deg, datatype: float64}
# - {name: center.dec, unit: deg, datatype: float64}
# - {name: roll, unit: deg, datatype: float64, description: 'Roll angle of spacecraft, position angle of FOV'}
# meta:
#   __serialized_columns__:
#     center:
#       __class__: astropy.coordinates.sky_coordinate.SkyCoord
#       __info__: {description: Pointing of the center of the spacecraft's FOV}
#       dec: !astropy.table.SerializedColumn
#         __class__: astropy.coordinates.angles.Latitude
#         unit: &id001 !astropy.units.Unit {unit: deg}
#         value: !astropy.table.SerializedColumn {name: center.dec}
#       frame: icrs
#       ra: !astropy.table.SerializedColumn
#         __class__: astropy.coordinates.angles.Longitude
#         unit: *id001
#         value: !astropy.table.SerializedColumn {name: center.ra}
#         wrap_angle: !astropy.coordinates.Angle
#           unit: *id001
#           value: 360.0
#       representation_type: spherical
#     location:
#       __class__: astropy.coordinates.earth.EarthLocation
#       __info__: {description: Location of the spacecraft}
#       ellipsoid: WGS84
#       x: !astropy.table.SerializedColumn
#         __class__: astropy.units.quantity.Quantity
#         __info__: {description: Location of the spacecraft}
#         unit: &id002 !astropy.units.Unit {unit: km}
#         value: !astropy.table.SerializedColumn {name: location.x}
#       y: !astropy.table.SerializedColumn
#         __class__: astropy.units.quantity.Quantity
#         __info__: {description: Location of the spacecraft}
#         unit: *id002
#         value: !astropy.table.SerializedColumn {name: location.y}
#       z: !astropy.table.SerializedColumn
#         __class__: astropy.units.quantity.Quantity
#         __info__: {description: Location of the spacecraft}
#         unit: *id002
#         value: !astropy.table.SerializedColumn {name: location.z}
#     time:
#       __class__: astropy.time.core.Time
#       __info__: {description: Start time of observation}
#       format: isot
#       in_subfmt: '*'
#       out_subfmt: '*'
#       precision: 3
#       scale: utc
#       value: !astropy.table.SerializedColumn {name: time}
#   cmdline: /Users/lpsinger/Library/Caches/pypoetry/virtualenvs/dorado-scheduling-SFXHA12M-py3.8/bin/dorado-scheduling examples/6.fits
#     -o examples/6.ecsv
#   prob: 0.8677108760874528
#   real: 53.43004761
#   status: OPTIMAL_SOLUTION
#   sys: 11.675946
#   user: 37.66574200000002
# schema: astropy-2.0
time exptime location.x location.y location.z center.ra center.dec roll
2012-05-02T18:28:32.699 10.0 -2845.6142321473585 5878.8553053444075 2741.980978715292 312.18749999999994 25.94447977237001 60.0
2012-05-02T18:38:32.699 10.0 -2122.274539437966 6565.524164906356 -1622.5988126491409 123.74999999999999 -72.38756092964962 40.0
2012-05-02T18:48:32.699 10.0 -630.4053621252034 4605.648258390085 -5353.880853495261 54.47368421052631 -61.94383702315671 80.0
2012-05-02T18:58:32.699 10.0 850.351542380172 733.2226412374255 -7001.352851326311 69.75 -60.434438844952275 50.0
2012-05-02T19:23:32.699 10.0 1113.8412273734912 -6988.690183285546 -384.0348698001247 84.13043478260869 -55.87335043525199 80.0
2012-05-02T19:33:32.699 10.0 78.47521319520273 -5946.956967791533 3845.061969971995 133.59375 7.180755781458282 20.0
2012-05-02T19:43:32.699 10.0 -791.3743171696142 -2510.0392381820348 6570.101197212697 115.31249999999999 18.20995686428301 20.0
2012-05-02T19:57:32.699 10.0 -875.500279843639 3614.7753803071428 6022.666827940929 291.6666666666667 49.702390326630685 0.0
